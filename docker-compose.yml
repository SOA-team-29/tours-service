version: '3.7'

services:

  explorer:
    build:
      dockerfile: Dockerfile
      context: ./psw-back-end/
      target: final
    restart: on-failure
    networks:
      - database
    ports:
      - "44333:80"
    environment:
      DATABASE_HOST: database
      DATABASE_PORT: 5432
      DATABASE_PASSWORD: super
      DATABASE_USER: postgres
      DATABASE_SCHEMA: explorer-v1
    depends_on:
      - database


  tours:
    build:
      dockerfile: Dockerfile
      context: ./tours-service/
    image: tours-web-server
    container_name: tours-container
    restart: always
    networks:
      - servers
    ports:
      - "8081:8081"
    depends_on:
      - database1

  blogs:
    build:
      dockerfile: Dockerfile
      context: ./blog-service/
    image: blogs-web-server
    container_name: blogs-container
    restart: always
    networks:
      - servers
    ports:
      - "8082:8082"
    depends_on:
      - database1

  stakeholders:
    build:
      dockerfile: Dockerfile
      context: ./stakeholders-service/
    image: stakeholders-web-server
    container_name: stakeholders-container
    restart: always
    networks:
      - servers
    ports:
      - "8083:8083"
    depends_on:
      - database1


  encounters:
    build:
      dockerfile: Dockerfile
      context: ./encounters-service/
    image: encounters-web-server
    container_name: encounters-container
    restart: always
    networks:
      - servers
    ports:
      - "4000:4000"
    depends_on:
      - mongo


  database:
    image: postgres:latest
    restart: always
    networks:
      - database
    environment:
      POSTGRES_PASSWORD: super
      POSTGRES_USER: postgres
      POSTGRES_DB: explorer-v1
    volumes:
      - type: volume
        source: explorer-data
        target: /var/lib/postgresql/data
      - type: bind
        source: explorer-init-data.sql
        target: /tmp/explorer-init.sql
      
    ports:
      - "5432:5432"

  database1:
    image: postgres:13
    restart: always
    networks:
      - servers
    environment:
      POSTGRES_PASSWORD: super
      POSTGRES_USER: postgres
      POSTGRES_DB: SOA
    volumes:
      - database-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  mongo:
    image: mongo:latest
    restart: always
    networks:
      - servers
    environment:
      MONGO_INITDB_DATABASE: SOAencounters
    volumes:
      - mongodb-data:/data/db
    ports:
      - "27017:27017"

volumes:
  database-data:
    name: SOA-database-data
  explorer-data:
    name: explorer-data
  mongodb-data:
    name: mongodb-data

networks:
  servers:
    name: servers
    driver: bridge
  database:
    name: database
    driver: bridge